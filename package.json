{
  "name": "note-organizer",
  "displayName": "Note Organizer",
  "description": "Organize your Markdown and text file notes accross all of your project, in a single place.",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "Other"
  ],
  "publisher": "RemiJacquemard",
  "activationEvents": [
    "onFileSystem:file"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "noteOrganizer.scanFolderForNotes",
        "title": "Scan folder for new notes",
        "category": "Note Organizer"
      },
      {
        "command": "noteOrganizer.openNote",
        "title": "Open note",
        "category": "Note Organizer"
      },
      {
        "command": "noteOrganizer.clearDatabase",
        "title": "Clear database",
        "category": "Note Organizer"
      },
      {
        "command": "noteOrganizer.createProject",
        "title": "Create a new project",
        "category": "Note Organizer",
        "shortTitle": "Create Project",
        "icon": "$(new-folder)"
      },
      {
        "command": "noteOrganizer.deleteProject",
        "title": "Delete project",
        "category": "Note Organizer",
        "icon": "$(trash)"
      },
      {
        "command": "noteOrganizer.editProjectName",
        "title": "Edit project name",
        "category": "Note Organizer",
        "icon": "$(pencil)"
      },
      {
        "command": "noteOrganizer.deleteNote",
        "title": "Delete note",
        "category": "Note Organizer",
        "icon": "$(trash)"
      },
      {
        "command": "noteOrganizer.importNoteToProject",
        "title": "Import existing note",
        "category": "Note Organizer",
        "icon": "$(go-to-file)"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "noteOrganizer",
          "name": "Note Organizer"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "noteOrganizer.createProject",
          "group": "navigation",
          "when": "view == noteOrganizer"
        },
        {
          "command": "noteOrganizer.importNoteToProject",
          "group": "navigation",
          "when": "view == noteOrganizer"
        }
      ],
      "view/item/context": [
        {
          "command": "noteOrganizer.deleteProject",
          "group": "inline@3",
          "when": "view == noteOrganizer && viewItem == project"
        },
        {
          "command": "noteOrganizer.editProjectName",
          "group": "inline@2",
          "when": "view == noteOrganizer && viewItem == project"
        },
        {
          "command": "noteOrganizer.deleteNote",
          "group": "inline@3",
          "when": "view == noteOrganizer && viewItem == note"
        },
        {
          "command": "noteOrganizer.importNoteToProject",
          "group": "inline@1",
          "when": "view == noteOrganizer && viewItem == project"
        }
      ],
      "commandPalette": [
        {
          "command": "noteOrganizer.deleteProject",
          "when": "false"
        },
        {
          "command": "noteOrganizer.editProjectName",
          "when": "false"
        },
        {
          "command": "noteOrganizer.deleteNote",
          "when": "false"
        }
      ]
    },
    "configuration": [
      {
        "title": "Note Organizer",
        "properties": {
          "noteOrganizer.noteFileRegex": {
            "title": "Note File Regex",
            "description": "The regex used to filter file while scanning for notes. The filename should match the given regex to be considered a note file.",
            "type": "string",
            "default": "^(?!.*release).*note.*(\\.md|\\.txt)$",
            "minLength": 1
          },
          "noteOrganizer.projectInnerFileRegex": {
            "title": "Project Inner File Regex",
            "markdownDescription": "The regex used to find out if a given folder should be considered as a project while scanning for notes. For a given folder `/a/b/`, `b` would be considered a project if any of its sub file and folder match this regex. By default, filter on `.vscode` files.",
            "type": "string",
            "default": "^.vscode$",
            "minLength": 1
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.77.0",
    "@typescript-eslint/eslint-plugin": "^5.56.0",
    "@typescript-eslint/parser": "^5.56.0",
    "@vscode/test-electron": "^2.3.0",
    "eslint": "^8.36.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^4.9.5"
  }
}
